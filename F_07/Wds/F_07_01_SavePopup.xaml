<Window x:Class="YKCJ_EngineerReport.F_07.Wds.F_07_01_SavePopup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:YKCJ_EngineerReport.F_07.Wds"
        mc:Ignorable="d"
        Title="F_07_01_SavePopup" Height="600" Width="400"  Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" ShowInTaskbar="False"
        WindowStyle="None" ResizeMode="CanResize" AllowsTransparency="True" x:Name="_F07_SavePopupWindow">

    <Window.Resources>

        <!--<CmMt:CommandRichTextBoxObj x:Key="CmMtObj"/>-->

        <!--콤보박스-->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <!--<Setter TargetName="" Value=""/>-->
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="LimitComboxStyle" TargetType="{x:Type ComboBox}">
            <!--<Setter Property="SnapsToDevicePixels" Value="true"/>-->
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <!--<Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>-->
            <Setter Property="FontSize" Value="{Binding Path=FontSize, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Foreground" Value="White"/>
            <!--<Setter-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="7,3,23,3"                           
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="SelectedItem" Value="{x:Null}">
                                <Setter Property="SelectedIndex" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <FontFamily x:Key="MaterialDesignFont">pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto</FontFamily>


        <!--<Style x:Key="MaterialDesignSwitchToggleButtons" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:ToggleButtonAssist.SwitchTrackOnBackground" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="materialDesign:ToggleButtonAssist.SwitchTrackOffBackground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0 1 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0.26" Duration="0"/>
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2"/>
                            </Storyboard>
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0" Duration="0:0:0.3"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="34">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="50.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"
                                                         Duration="0" To="50.5" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"
                                                         Duration="0" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Rectangle x:Name="Track" 
                                       Fill= "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.SwitchTrackOffBackground)}" 
                                       Opacity="0.26"
                                       HorizontalAlignment="Left" 
                                       Height="30" 
                                       Margin="4.211,5,4.211,0" 
                                       Stroke="{x:Null}" 
                                       VerticalAlignment="Top" 
                                       Width="80" 
                                       RadiusY="15" 
                                       RadiusX="15"/>
                                <Grid x:Name="ThumbHolder"
                                  HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Ellipse x:Name="RippleThumb"
                                         Fill="{DynamicResource PrimaryHueLightBrush}"
                                         Height="40" Width="40"
                                         IsHitTestVisible="False"
                                         Opacity="0.26"
                                         Margin="0"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"
                                         RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                        <Ellipse x:Name="Thumb"
                                             Fill="#FFFAFAFA" Stroke="{x:Null}" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Width="40" Height="40"
                                             Margin="0,0,0,0"
                                             RenderTransformOrigin="0.5,0.5"
                                             Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                        </Ellipse>
                                    </AdornerDecorator>
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                                  Margin="{TemplateBinding Padding}"
                                                  x:Name="ContentPresenter"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  FlowDirection="LeftToRight"/>
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Grid.RenderTransform>
                                </Grid>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Thumb" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                <Setter TargetName="Track" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.SwitchTrackOnBackground)}" />
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.OnContent)}" />
                                <Setter TargetName="ContentPresenter" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.OnContentTemplate)}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                --><!-- Need to set Foreground to Background here instead of hardcoded PrimaryHueMidBrush --><!--
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ShowRipple}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HideRipple}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Fill" Value="#BDBDBD" />
                                <Setter TargetName="Track" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity=".12" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


    </Window.Resources>

    <Border BorderBrush="Black" BorderThickness="0.5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <Grid Background="#FF3580BF" Grid.Row="0" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Width="26" Height="26" Background="{x:Null}" BorderBrush="{x:Null}" Click="WindowMaximize_Click"
                    VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,10,0">
                    <materialDesign:PackIcon Kind="WindowMaximize" Width="26" Height="26" Foreground="White"/>
                </Button>
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <materialDesign:PackIcon  Width="20" Height="20" VerticalAlignment="Center" Margin="12,0,0,0" Kind="ContentSaveOutline" Foreground="White"/>
                    <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" FontSize="14" Foreground="White" Text="PART LIST SAVE"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <RadioButton Grid.Row="0"  IsChecked="{Binding Listitem[0].Listitemcheck}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                <TextBox Grid.Row="0" Grid.Column="1" materialDesign:HintAssist.Hint="{Binding Listitem[0].Listitemname}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="30"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="300"
                         Text="{Binding Listitem[0].Saveitemname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <RadioButton Grid.Row="1"  IsChecked="{Binding Listitem[1].Listitemcheck}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                <TextBox Grid.Row="1" Grid.Column="1" materialDesign:HintAssist.Hint="{Binding Listitem[1].Listitemname}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="30"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="300"
                         Text="{Binding Listitem[1].Saveitemname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <RadioButton Grid.Row="2"  IsChecked="{Binding Listitem[2].Listitemcheck}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                <TextBox Grid.Row="2" Grid.Column="1" materialDesign:HintAssist.Hint="{Binding Listitem[2].Listitemname}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="30"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="300"
                         Text="{Binding Listitem[2].Saveitemname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <RadioButton Grid.Row="3"  IsChecked="{Binding Listitem[3].Listitemcheck}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                <Grid Grid.Row="3" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.4*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ComboBox  VerticalAlignment="Center" HorizontalAlignment="Left" Width="300" Height="36" Style="{StaticResource LimitComboxStyle}" ItemsSource="{Binding Modulepart1list}"
                              DisplayMemberPath="Name" SelectedValuePath="Idx" SelectedValue="{Binding Selectpart1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Grid.Row="1" materialDesign:HintAssist.Hint="{Binding Listitem[3].Listitemname}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="30"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="300"
                         Text="{Binding Listitem[3].Saveitemname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>

            </Grid>


            <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center">

                <Button Height="50" Width="140" Content="Save" Margin="0,0,20,0" Command="{Binding CmdSetPartListSave}" CommandParameter="{Binding ElementName=_F07_SavePopupWindow}"/>
                <Button Height="50" Width="140" Content="Close" Margin="20,0,0,0" Command="{Binding CmdWindowClose}" CommandParameter="{Binding ElementName=_F07_SavePopupWindow}"/>

            </StackPanel>

        </Grid>
    </Border>
    
</Window>
