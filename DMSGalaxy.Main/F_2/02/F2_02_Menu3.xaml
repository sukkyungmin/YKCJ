<Window x:Class="DMSGalaxy.Main.F_2._02.F2_02_Menu3"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:numberOnlyBehaviourWpf ="clr-namespace:DMSGalaxy.Common.Helper;assembly=DMSGalaxy.Common"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"        
        xmlns:SubControl="clr-namespace:DMSGalaxy.Main.F_2._02"  Loaded="F2_Maun_Loaded" ShowInTaskbar="False" 
        WindowStyle="None"  ResizeMode="NoResize" Closed="F2_Maun_Closed" x:Name="F2_Maun" 
        Title="F2_02_Menu3" Width="700" SizeToContent="Height" MaxHeight="800">
    <Window.Resources>

        <Style x:Key="SemiTransparentThinScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0"/>

                            <ScrollBar Grid.Column="1"
                     Opacity="0.5"
                     Name="PART_VerticalScrollBar"
                     Value="{TemplateBinding VerticalOffset}"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Width="10"
                     MinWidth="10"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <ScrollBar Name="PART_HorizontalScrollBar"
                     Opacity="0.5"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Grid.Column="0"
                     Height="10"
                     MinHeight="10"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--체크박스-->

        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Ellipse x:Name="outerEllipse">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Red"/>
                                        <GradientStop Offset="0.88" Color="LightCoral"/>
                                        <GradientStop Offset="1" Color="DarkRed"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse Margin="10" x:Name="highlightCircle" >
                                <Ellipse.Fill >
                                    <LinearGradientBrush >
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.5" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                            <GradientStop Offset="0" Color="Green"/>
                                            <GradientStop Offset="0.5" Color="LightGreen"/>
                                            <GradientStop Offset="1" Color="DarkGreen"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="outerEllipse" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Offset="0" Color="Green"/>
                                            <GradientStop Offset="0.88" Color="LightGreen"/>
                                            <GradientStop Offset="1" Color="DarkGreen"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                            <GradientStop Offset="0" Color="Red"/>
                                            <GradientStop Offset="0.5" Color="LightCoral"/>
                                            <GradientStop Offset="1" Color="DarkRed"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox" x:Key="Flat_CheckBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Black" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightSkyBlue" />
                </Trigger>
            </Style.Triggers>

        </Style>


        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="50" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisualStyte}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                              MinHeight="50" MinWidth="50" ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="3*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                    </Grid.RowDefinitions>

                                    <Border Name="MainBorder"
                                    Grid.ColumnSpan="9" Grid.RowSpan="9"
                                    CornerRadius="4"
                                    BorderThickness="1"
                                    Background="Transparent" />

                                    <Border Name="InnerBorder"
                                    Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5"
                                    BorderThickness="1"
                                    BorderBrush="#808080" />

                                    <Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5"
                                  Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="#808080"/>

                                    <Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5"
                                  Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#3babe3"
                                  Stretch="Fill"
                                  Stroke="#3babe3" />

                                    <Path Name="InderminateMark"
                                  Grid.Column="3"
                                  Grid.Row="4"
                                  Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  Fill="#808080" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#81d2eb" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--콤보박스-->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="LimitComboxStyle" TargetType="{x:Type ComboBox}">
            <!--<Setter Property="SnapsToDevicePixels" Value="true"/>-->
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <!--<Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>-->
            <Setter Property="FontSize" Value="{Binding Path=FontSize, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Foreground" Value="White"/>
            <!--<Setter-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="7,3,23,3"                            
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="SelectedItem" Value="{x:Null}">
                                <Setter Property="SelectedIndex" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>



        <!--SimpleStyles: ComboBoxItem-->
        <!--<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <Style x:Key="ExorShButtonStyle" TargetType="{x:Type Button}">

            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#D3D3D3" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                <!--<Setter Property="Foreground" Value="White" />-->
                                <Setter Property="Background" Value="#0E2D4B" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Border BorderThickness="1.5,1.5,1.5,0.5" BorderBrush="#0E2D4B">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="240"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#0E2D4B">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Image   Width="20" Height="20" Grid.Column="1">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding St}" Value="Production">
                                    <Setter   Property="Source" Value="/DMSGalaxy.Main;component/Images/F2_Production.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding St}" Value="Waste">
                                    <Setter   Property="Source" Value="/DMSGalaxy.Main;component/Images/F2_Waste.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding St}" Value="Delay">
                                    <Setter   Property="Source" Value="/DMSGalaxy.Main;component/Images/F2_Delay.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <TextBlock Grid.Column="2" FontSize="14" Foreground="#728DA8" VerticalAlignment="Center" HorizontalAlignment="Left"  FontWeight="Bold" 
                                         Text="{Binding St}" TextOptions.TextFormattingMode="Display" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"  Grid.Row="1" FontSize="10" Foreground="#C2C0B9" VerticalAlignment="Center" HorizontalAlignment="Left"  Margin="16,0,0,0"
                                         Text="●" TextOptions.TextFormattingMode="Display" />
                <TextBlock Grid.Column="0"   Grid.Row="1" FontSize="20" Foreground="#3C3C3C" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Normal" Margin="36,0,0,4"
                                         Text="Dates" TextOptions.TextFormattingMode="Display" FontFamily="Malgun Gothic"  />

                <TextBlock Grid.Column="1"  Grid.Row="1" FontSize="15" Foreground="#C2C0B9" VerticalAlignment="Center" HorizontalAlignment="Left"  Margin="14,15,0,0"
                                         Text="S: " TextOptions.TextFormattingMode="Display" />

                <TextBlock Grid.Column="1"  Grid.Row="1" FontSize="15" Foreground="#C2C0B9" VerticalAlignment="Center" HorizontalAlignment="Left"  Margin="282,15,0,0"
                                         Text="E: " TextOptions.TextFormattingMode="Display" />

                <DatePicker x:Name="Stime" HorizontalAlignment="Center" Grid.Column="1" VerticalAlignment="Center" Width="160"  Grid.Row="1"  Margin="0,0,378,0"  
                                            Height="34" FontSize="20"  VerticalContentAlignment="Center" 
                                    SelectedDate="{Binding Stime, Mode=TwoWay ,TargetNullValue={x:Static sys:DateTime.Now}}"/>

                <DatePicker x:Name="Etime" HorizontalAlignment="Center"   Grid.Column="1" VerticalAlignment="Center" Width="160"  Grid.Row="1"  Margin="160,0,0,0"
                                     Height="34" FontSize="20"   VerticalContentAlignment="Center"   
                                    SelectedDate="{Binding Etime, Mode=TwoWay ,TargetNullValue={x:Static sys:DateTime.Now}}">
                </DatePicker>

                <!--<dxe:DateEdit x:Name="Stime" Grid.Column="1" Grid.Row="0"  Width="150" Height="30" FontSize="18" Margin="0,0,390,0"  AllowDefaultButton="False" HorizontalContentAlignment="Center"
                                                DateTime="{Binding Stime, Mode=TwoWay ,TargetNullValue={x:Static sys:DateTime.Now}}" >
                    <dxe:DateEdit.Buttons>
                        <dxe:ButtonInfo IsDefaultButton="True" GlyphKind="Custom" >
                            <dxe:ButtonInfo.ContentTemplate>
                                <DataTemplate>
                                    <Grid  Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Setter Property="Background" Value="White"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#F476D1"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Image Source="/DMSGalaxy.Main;component/Images/DatePicker1.png" Height="24" Width="24" VerticalAlignment="Center"/>
                                    </Grid>
                                </DataTemplate>
                            </dxe:ButtonInfo.ContentTemplate>
                        </dxe:ButtonInfo>
                    </dxe:DateEdit.Buttons>
                    <dxe:DateEdit.StyleSettings>
                        <dxe:DateEditPickerStyleSettings/>
                    </dxe:DateEdit.StyleSettings>
                </dxe:DateEdit>-->

                <!--<TextBlock Grid.Column="1"   Grid.Row="0" FontSize="16" Foreground="#3C3C3C" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"  Margin="0,10,198,0"
                                         Text="to" TextOptions.TextFormattingMode="Display" />

                <dxe:DateEdit x:Name="Etime" Grid.Column="1" Grid.Row="0"  Width="150" Height="30" FontSize="18" Margin="0,0,10,0"  AllowDefaultButton="False" HorizontalContentAlignment="Center"
                                                DateTime="{Binding Etime, Mode=TwoWay ,TargetNullValue={x:Static sys:DateTime.Now}}" >
                    <dxe:DateEdit.Buttons>
                        <dxe:ButtonInfo IsDefaultButton="True" GlyphKind="Custom" >
                            <dxe:ButtonInfo.ContentTemplate>
                                <DataTemplate>
                                    <Grid  Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Setter Property="Background" Value="White"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#F476D1"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Image Source="/DMSGalaxy.Main;component/Images/DatePicker1.png" Height="24" Width="24" VerticalAlignment="Center"/>
                                    </Grid>
                                </DataTemplate>
                            </dxe:ButtonInfo.ContentTemplate>
                        </dxe:ButtonInfo>
                    </dxe:DateEdit.Buttons>
                    <dxe:DateEdit.StyleSettings>
                        <dxe:DateEditPickerStyleSettings/>
                    </dxe:DateEdit.StyleSettings>
                </dxe:DateEdit>-->

                <TextBlock Grid.Column="0"  Grid.Row="0" FontSize="10" Foreground="#C2C0B9" VerticalAlignment="Center" HorizontalAlignment="Left"  Margin="16,0,0,0"
                                         Text="●" TextOptions.TextFormattingMode="Display" />
                <TextBlock Grid.Column="0"   Grid.Row="0" FontSize="20" Foreground="#3C3C3C" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Normal"  Margin="36,0,0,4"
                                         Text="M/C" TextOptions.TextFormattingMode="Display" FontFamily="Malgun Gothic"  />


                <ComboBox  Grid.Column="1"   Grid.Row="0" Margin="30,0,0,0"
                                               Style="{StaticResource LimitComboxStyle}" Width="80" Height="30"  x:Name="_cbMcNumber" FontSize="16" 
                                               HorizontalAlignment="Left" VerticalAlignment="Center" 
                                               SelectedItem="{Binding MCnumber}" />


                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"  Grid.Row="0" FontSize="10" Foreground="#C2C0B9" VerticalAlignment="Center" HorizontalAlignment="Left"  Margin="16,0,0,0"
                                         Text="●" TextOptions.TextFormattingMode="Display" />
                    <TextBlock Grid.Column="0"   Grid.Row="0" FontSize="20" Foreground="#3C3C3C" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Normal" Margin="36,0,0,4"
                                         Text="Part" TextOptions.TextFormattingMode="Display" FontFamily="Malgun Gothic" />
                    <WrapPanel HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="0,0,0,0">

                        <Button x:Name="_btMode1" Grid.Column="0"  Width="240" Height="40" >
                            <Button.Style>
                                <Style  TargetType="Button">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Command" Value="{Binding CmReportModeChange}"/>
                                    <Setter Property="CommandParameter" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}}"/>
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize" Value="22" />
                                    <Setter Property="FontFamily" Value="Bookman Old Style"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Path x:Name="PathIcon" Width="10" Height="10" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="10,2,0,0"
                                         Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center" Margin="30,0,0,0" />
                                                </Grid>

                                                <!--멀티 트리거-->
                                                <ControlTemplate.Triggers>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#F3B562" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="DarkGray" />
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="DarkGray" />
                                                    </MultiDataTrigger>

                                                    <DataTrigger Binding="{Binding ReportMode}" Value="ProductionDate">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="WasteDate">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="DelayDate">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Grid Width="30"/>

                        <Button x:Name="_btMode2" Grid.Column="1" Width="240" Height="40"  >
                            <Button.Style>
                                <Style  TargetType="Button">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Command" Value="{Binding CmReportModeChange}"/>
                                    <Setter Property="CommandParameter" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}}"/>
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize" Value="22" />
                                    <Setter Property="FontFamily" Value="Bookman Old Style"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Path x:Name="PathIcon" Width="10" Height="10" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="10,2,0,0"
                                         Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center" Margin="30,0,0,0" />
                                                </Grid>

                                                <!--멀티 트리거-->
                                                <ControlTemplate.Triggers>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#F3B562" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="DarkGray" />
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="DarkGray" />
                                                    </MultiDataTrigger>

                                                    <DataTrigger Binding="{Binding ReportMode}" Value="ProductionShift">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="WasteGroup">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="DelayGroup">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Grid Width="30">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding St}" Value="Production">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <Button x:Name="_btMode3" Grid.Column="1" Width="240" Height="40" >
                            <Button.Style>
                                <Style  TargetType="Button">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Command" Value="{Binding CmReportModeChange}"/>
                                    <Setter Property="CommandParameter" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}}"/>
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize" Value="22" />
                                    <Setter Property="FontFamily" Value="Bookman Old Style"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Path x:Name="PathIcon" Width="10" Height="10" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="10,2,0,0"
                                         Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center" Margin="30,0,0,0" />
                                                </Grid>

                                                <!--멀티 트리거-->
                                                <ControlTemplate.Triggers>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#F3B562" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="DarkGray" />
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="DarkGray" />
                                                    </MultiDataTrigger>

                                                    <!--<DataTrigger Binding="{Binding St}" Value="ChangeOver">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>-->
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="ChangeOver">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="WasteCode">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ReportMode}" Value="DelayCode">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                    </WrapPanel>
                </Grid>
            </Grid>

            <ScrollViewer VerticalScrollBarVisibility="Auto"  Grid.Row="2" Style="{StaticResource SemiTransparentThinScrollViewer}">
                <StackPanel>
                    <Expander  x:Name="ed_Filter1" Visibility="Visible"  Header="OPTION 1" FontSize="16" FontWeight ="Normal" Foreground="#3D3C3C">
                        <Grid Background="#3F3F3F" Margin="6,8,6,8">
                            <Grid Height="114" Background="White" Margin="0.5,0.3,0.3,0.5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="22"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="6"/>
                                </Grid.RowDefinitions>
                                <TextBlock FontSize="11" Grid.Column="0"  Grid.Row="0" VerticalAlignment="Bottom" Text="Data Points" Margin="11,0,0,0"
                                                         Foreground="Gray"/>
                                <TextBox VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding TopCount , StringFormat=N0}" Grid.Column="0" Grid.Row="1" 
                                                              HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Padding="0,0,3,0"  Width="100" Height="30" FontSize="16" Margin="11,0,0,0"
                                                              numberOnlyBehaviourWpf:NumberOnlyBehaviour.IsEnabled="True" />
                                <TextBlock FontSize="11" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" VerticalAlignment="Bottom" Text="Product List" Margin="11,0,0,0"
                                                         Foreground="Gray"/>
                                <ComboBox  Grid.Column="0"  Grid.ColumnSpan="4"  Grid.Row="3" Style="{StaticResource LimitComboxStyle}"  HorizontalAlignment="Left"
                                                VerticalAlignment="Center"  Margin="11,0,0,0"
                                               SelectedValuePath="PRODUCT" Width="660" Height="40" ItemsSource="{Binding F2_dataTable2}"
                                                FontSize="16" DisplayMemberPath="PRODUCT" SelectedValue="{Binding ProductName}"/>
                            </Grid>
                        </Grid>
                        <!--SelectedItem="{Binding MCnumber}"-->
                    </Expander>

                    <Expander x:Name="ed_Filter2">
                        <Expander.Style>
                            <Style TargetType="Expander">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="Header" Value="OPTION 2"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="Foreground" Value="#3D3C3C"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ReportMode}" Value="ChangeOver">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Expander.Style>

                        <Grid Height="200">
                            <ListBox Name="myListbox"  SelectionMode="Multiple" Grid.Row="0" ItemsSource="{Binding Listboxpersons}" Margin="5,10,5,10">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"/>
                                                <ColumnDefinition Width="250"/>
                                                <ColumnDefinition Width="150"/>
                                                <ColumnDefinition Width="60"/>
                                                <ColumnDefinition Width="120"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox Grid.Column="0" IsChecked="{Binding Path= LimitCheck}" Style="{StaticResource CheckBoxStyle}"/>
                                            <ComboBox  Grid.Column="1" Style="{StaticResource LimitComboxStyle}" Width="200" Height="34"   FontSize="16" VerticalContentAlignment="Center"                                                 
                                                                          VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ComboBoxColumn"
                                                                          ItemsSource="{Binding Path=Personitem}" 
                                                                           SelectedItem="{Binding Path =Spersonitem}" 
                                                                          DisplayMemberPath="Name"/>

                                            <TextBox VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Path=LimitCount , StringFormat=N0}" Grid.Column="2" 
                                                                  HorizontalContentAlignment="Right" VerticalContentAlignment="Center" 
                                                                  Padding="0,0,3,0"  Width="130" Height="34" FontSize="20"
                                                                  numberOnlyBehaviourWpf:NumberOnlyBehaviour.IsEnabled="True" />

                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="3" Margin="0,12,5,0"  Foreground="#938F8F" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <!--<Setter Property="Text" Value=""/>-->
                                                        <Setter Property="FontSize" Value="16"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=LimitName }" Value="TOTAL COUNT">
                                                                <Setter Property="Text" Value="Pad" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="WASTE COUNT">
                                                                <Setter Property="Text" Value="Pad" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="BOX COUNT">
                                                                <Setter Property="Text" Value="Box" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="RUNNINGTIME">
                                                                <Setter Property="Text" Value="Minute" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="DOWNTIME">
                                                                <Setter Property="Text" Value="Minute" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="DOWNCOUNT">
                                                                <Setter Property="Text" Value="Stop" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="OCCUR COUNT">
                                                                <Setter Property="Text" Value="Count" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="DEFECT COUNT">
                                                                <Setter Property="Text" Value="Pad" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="발생횟수">
                                                                <Setter Property="Text" Value="Stop" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path =LimitName}" Value="DOWNTIME(분)">
                                                                <Setter Property="Text" Value="Minute" />
                                                            </DataTrigger>
                                                            <!--<MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    -->
                                                            <!-- I have a feeling these bindings aren't correct...-->
                                                            <!--
                                                                    <Condition Binding="{Binding Path =Spersonitem}" Value="TOTAL COUNT" />
                                                                    <Condition Binding="{Binding Path =Spersonitem}" Value="WASTE COUNT" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="Pad" />
                                                            </MultiDataTrigger>-->
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <ComboBox  Grid.Column="4" Style="{StaticResource LimitComboxStyle}" Width="90" Height="34"  FontSize="16"
                                                                          VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                         ItemsSource="{Binding Path=PersonLimit}"
                                                                         SelectedItem="{Binding Path =SpersonLimit}" 
                                                                         DisplayMemberPath="Name"/>

                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Expander>

                </StackPanel>
            </ScrollViewer>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="13*"/>
                    <ColumnDefinition Width="335*"/>
                    <ColumnDefinition Width="349*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="1" Content="검색" Width="120" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center"  Style="{StaticResource ExorShButtonStyle}"
                                Command="{Binding CmWindowCloseYesGrid}"
                                CommandParameter="{Binding ElementName=F2_Maun}" Margin="101,15,114,15"/>
                <Button Grid.Column="2" Content="취소" Width="120" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center"   Style="{StaticResource ExorShButtonStyle}"
                                Command="{Binding CmWindowCloseNoGrid}"
                                CommandParameter="{Binding ElementName=F2_Maun}" Margin="114,15,115,15"/>
            </Grid>
        </Grid>
    </Border>
</Window>
