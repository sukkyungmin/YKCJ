<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:CmMt ="clr-namespace:YKCJViewModel.Common;assembly=YKCJViewModel"
      xmlns:local="clr-namespace:YKCJ_EngineerReport.F_08" 
      xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml" x:Class="YKCJ_EngineerReport.F_08.F_08_01"
      mc:Ignorable="d" 
      d:DesignHeight="760" d:DesignWidth="1350"
      Title="F_08_01" x:Name="_testpage">

    <Page.Resources>

        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/YKCJ_EngineerReport;component/ResourcesFile/MyResourcesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->
            
            <CmMt:CommandMultiObj x:Key="CmMtObj"/>
            <CmMt:SingleValueNegativeConverter x:Key="SnValNgtv"/>

            <SolidColorBrush x:Key="IsMouseOverBackground" Color="#2FACE2" />
            <SolidColorBrush x:Key="IsPressedBrush" Color="White" />

            <Style x:Key="FlatButtonBaseStyle" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Background" Value="White" />
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="#2EACE3"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        >

                                <ContentPresenter Name="Content"
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                      TextBlock.FontSize="{TemplateBinding FontSize}" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource IsMouseOverBackground}" />
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        <!--</ResourceDictionary>-->

    </Page.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Image  VerticalAlignment="Top" Source="Logins.png" Stretch="UniformToFill"/>
        </Grid>
        <Grid Grid.Row="0" Height="600" Background="#03223A" Opacity="0.9"/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*"/>
                <ColumnDefinition Width="4.9*"/>
                <ColumnDefinition Width="4.9*"/>
                <ColumnDefinition Width="0.1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2" Margin="60,80,60,80" Background="{StaticResource ResourceKey=white0Brush}">
                <Grid Margin="0.5" Background="{StaticResource ResourceKey=black0Brush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Content="신규" HorizontalAlignment="Center" Width="150"  Margin="0,0,200,0" Command="{Binding Cmdnewuser}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource CmMtObj}">
                                <Binding ElementName="_Password"/>
                                <Binding ElementName="_ConfirmPassword"/>
                                <Binding ElementName="_UserList"/>
                                <Binding ElementName="_testpage"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button x:Name="_UserList" Content="전체 목록" HorizontalAlignment="Center" Width="150"  Margin="200,0,0,0" Click="ModifyUserListButton_Click"/>
                    <!--<ListBox x:Name="lstBox" Grid.Row="1" Height="Auto" HorizontalAlignment="Stretch" Margin="5,5,5,5"  VerticalAlignment="Top" ItemsSource="{Binding Useritem}" >-->
                    <!--<ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="LayoutTransform">
                                    <Setter.Value>
                                        <ScaleTransform x:Name="transform" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" />
                                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" Duration="0:0:.8"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" Duration="0:0:1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>-->
                    <!--<ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Useritemname}" Height="20" Foreground="White">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="LayoutTransform">
                                                <Setter.Value>
                                                    <ScaleTransform x:Name="transform" />
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" />
                                                                <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" Duration="0:0:1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>-->
                    <!--</ListBox>-->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Margin="10,0,5,0">
                        <ScrollViewer.Resources>
                            <Style TargetType="{x:Type ScrollBar}">
                                <Setter Property="Background" Value="{StaticResource F_08_01_Scrollbar0Brush}"/>
                            </Style>
                            <!--<Style TargetType="{x:Type po}"-->
                        </ScrollViewer.Resources>
                        <WrapPanel x:Name="_Wrap_userlist">
                            <WrapPanel.Resources>
                                <Style TargetType="{x:Type UserControl}">
                                    <Setter Property="Margin" Value="10,0"/>
                                    <Setter Property="Padding" Value="10,10"/>
                                </Style>
                            </WrapPanel.Resources>
                        </WrapPanel>
                    </ScrollViewer>
                </Grid>
            </Grid>
            <Border Background="White" CornerRadius="10"  Margin="40,80,40,80" Grid.Column="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="140"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="1" Grid.Row="0" Text="Account Setting" VerticalAlignment="Center" HorizontalAlignment="Left" 
                           Margin="40,0,0,0" FontSize="24" FontWeight="Normal" Foreground="#8C8C8C"/>

                    <Image x:Name="UserImages" Width="180" Height="180" Stretch="Fill"  Grid.Column="1" Grid.Row="2"  Grid.RowSpan="5" VerticalAlignment="Top" >
                        <Image.Clip>
                            <RectangleGeometry RadiusX="100" RadiusY="100" Rect="0,0,180,180"/>
                        </Image.Clip>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="{Binding Path=Userbitmapimage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Useridx}" Value="0">
                                        <Setter Property="Source" Value="{Binding Path=Userimagepath}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>

                    </Image>
                    <Button Width="180" Height="35" Content="CHANGE" Grid.Column="1" Grid.Row="7"  FontWeight="Bold" Command="{Binding Cmdimagechange}"
                        VerticalAlignment="Top"  TextOptions.TextFormattingMode="Ideal" Style="{StaticResource FlatButtonBaseStyle}"/>

                    <!--<c1:C1MaskedTextBox x:Name="c1MaskedTextBox" Grid.Column="3" Grid.Row="1" TextAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                    Watermark="안녕하세요." Text="{Binding Path=Userid , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="20"/>-->
                    <TextBox x:Name="_Userid" Grid.Column="2" Grid.Row="1" materialDesign:HintAssist.Hint="ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="16" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding Path=Userid , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         InputMethod.IsInputMethodEnabled="False" IsEnabled="{Binding Path=SaveMode}"/>
                    <PasswordBox x:Name="_Password" Grid.Column="2" Grid.Row="2" materialDesign:HintAssist.Hint="{Binding Path=Userpwconfimation}" Style="{StaticResource MaterialDesignFloatingHintPasswordBox}" 
                         Foreground="#2D2D2D" FontFamily="Champagne &amp; Limousines" FontSize="16" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" 
                         PasswordChanged="PasswordBox_PasswordChanged"
                         InputMethod.IsInputMethodEnabled="False"/>
                    <PasswordBox x:Name="_ConfirmPassword" Grid.Column="2" Grid.Row="3" materialDesign:HintAssist.Hint="Confirm Password" Style="{StaticResource MaterialDesignFloatingHintPasswordBox}" 
                         Foreground="#2D2D2D" FontFamily="Champagne &amp; Limousines" FontSize="16" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" 
                         PasswordChanged="PasswordCheckBox_PasswordChanged"
                         InputMethod.IsInputMethodEnabled="False"/>
                    <TextBox Grid.Column="2" Grid.Row="4" materialDesign:HintAssist.Hint="Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="16" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding Path=Username , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.Column="2" Grid.Row="5" materialDesign:HintAssist.Hint="Job Position" Style="{StaticResource MaterialDesignFloatingHintTextBox}" FontFamily="Champagne &amp; Limousines" 
                         Foreground="#2D2D2D" FontSize="16" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding Path=Userjob , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="_SizeCheck" Grid.Column="2" Grid.Row="6" Text="Menu List " VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="#FF121F6E" FontSize="14" 
                           Margin="0,10,0,0" FontWeight="Normal" FontFamily="Champagne &amp; Limousines"/>
                    <Grid Grid.Column="2" Grid.Row="7">
                        <!--<Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>-->
                        <ListBox HorizontalAlignment="Stretch" 
                          ItemsSource="{Binding Useritem}" 
                          >
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="2"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="LightGray" BorderThickness="0.5">
                                        <Grid>
                                            <CheckBox IsChecked="{Binding Path=Useritemcheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="29" Margin="5,0,0,0"
                                                  Content="{Binding Path=Useritemname}" FontSize="12" Foreground="#FF616161">
                                            </CheckBox>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                        </ListBox>

                    </Grid>

                    <Button Width="180" Height="35" Grid.Column="2" Grid.Row="8"  FontWeight="Bold" Command="{Binding Cmdusersave}" Margin="0,30"
                        VerticalAlignment="Top"  TextOptions.TextFormattingMode="Ideal" Style="{StaticResource FlatButtonBaseStyle}"
                        Content="SAVE" Visibility="{Binding Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Path=SaveMode, Converter={StaticResource SnValNgtv}, ConverterParameter=1}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource CmMtObj}">
                                <Binding ElementName="_Password"/>
                                <Binding ElementName="_ConfirmPassword"/>
                                <Binding ElementName="_UserList"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>


                    <Button Width="140" Height="35" Grid.Column="2" Grid.Row="8"  FontWeight="Bold" Command="{Binding Cmduserupdate}" Margin="0,30"
                        VerticalAlignment="Top" HorizontalAlignment="Left" TextOptions.TextFormattingMode="Ideal" Style="{StaticResource FlatButtonBaseStyle}"
                        Content="MODIFY" Visibility="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged , Path=SaveMode, Converter={StaticResource SnValNgtv}, ConverterParameter=2}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource CmMtObj}">
                                <Binding ElementName="_Password"/>
                                <Binding ElementName="_ConfirmPassword"/>
                                <Binding ElementName="_UserList"/>
                                <Binding ElementName="_testpage"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>

                    <Button Width="140" Height="35" Grid.Column="2" Grid.Row="8"  FontWeight="Bold" Command="{Binding Cmduserdelete}" Margin="0,30"
                        VerticalAlignment="Top" HorizontalAlignment="Right" TextOptions.TextFormattingMode="Ideal" Style="{StaticResource FlatButtonBaseStyle}"
                        Content="DELETE" Visibility="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged , Path=SaveMode, Converter={StaticResource SnValNgtv}, ConverterParameter=2}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource CmMtObj}">
                                <Binding ElementName="_Password"/>
                                <Binding ElementName="_ConfirmPassword"/>
                                <Binding ElementName="_UserList"/>
                                <Binding ElementName="_testpage"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>

                </Grid>
            </Border>
        </Grid>


    </Grid>
</Page>
