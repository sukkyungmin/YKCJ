//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QTRS.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProductMfTestDataSource")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ProductMfTestDataSource : global::System.Data.DataSet {
        
        private ProductMfTestContentDataSetDataTable tableProductMfTestContentDataSet;
        
        private ProductMfTestHeaderDataSetDataTable tableProductMfTestHeaderDataSet;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProductMfTestDataSource() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ProductMfTestDataSource(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProductMfTestContentDataSet"] != null)) {
                    base.Tables.Add(new ProductMfTestContentDataSetDataTable(ds.Tables["ProductMfTestContentDataSet"]));
                }
                if ((ds.Tables["ProductMfTestHeaderDataSet"] != null)) {
                    base.Tables.Add(new ProductMfTestHeaderDataSetDataTable(ds.Tables["ProductMfTestHeaderDataSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductMfTestContentDataSetDataTable ProductMfTestContentDataSet {
            get {
                return this.tableProductMfTestContentDataSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductMfTestHeaderDataSetDataTable ProductMfTestHeaderDataSet {
            get {
                return this.tableProductMfTestHeaderDataSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ProductMfTestDataSource cln = ((ProductMfTestDataSource)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProductMfTestContentDataSet"] != null)) {
                    base.Tables.Add(new ProductMfTestContentDataSetDataTable(ds.Tables["ProductMfTestContentDataSet"]));
                }
                if ((ds.Tables["ProductMfTestHeaderDataSet"] != null)) {
                    base.Tables.Add(new ProductMfTestHeaderDataSetDataTable(ds.Tables["ProductMfTestHeaderDataSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProductMfTestContentDataSet = ((ProductMfTestContentDataSetDataTable)(base.Tables["ProductMfTestContentDataSet"]));
            if ((initTable == true)) {
                if ((this.tableProductMfTestContentDataSet != null)) {
                    this.tableProductMfTestContentDataSet.InitVars();
                }
            }
            this.tableProductMfTestHeaderDataSet = ((ProductMfTestHeaderDataSetDataTable)(base.Tables["ProductMfTestHeaderDataSet"]));
            if ((initTable == true)) {
                if ((this.tableProductMfTestHeaderDataSet != null)) {
                    this.tableProductMfTestHeaderDataSet.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ProductMfTestDataSource";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProductMfTestDataSource.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProductMfTestContentDataSet = new ProductMfTestContentDataSetDataTable();
            base.Tables.Add(this.tableProductMfTestContentDataSet);
            this.tableProductMfTestHeaderDataSet = new ProductMfTestHeaderDataSetDataTable();
            base.Tables.Add(this.tableProductMfTestHeaderDataSet);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProductMfTestContentDataSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProductMfTestHeaderDataSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProductMfTestDataSource ds = new ProductMfTestDataSource();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductMfTestContentDataSetRowChangeEventHandler(object sender, ProductMfTestContentDataSetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductMfTestHeaderDataSetRowChangeEventHandler(object sender, ProductMfTestHeaderDataSetRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductMfTestContentDataSetDataTable : global::System.Data.TypedTableBase<ProductMfTestContentDataSetRow> {
            
            private global::System.Data.DataColumn columnfdaName;
            
            private global::System.Data.DataColumn columnstandardAmount;
            
            private global::System.Data.DataColumn columnusage;
            
            private global::System.Data.DataColumn columnmainLotNo;
            
            private global::System.Data.DataColumn columnnote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestContentDataSetDataTable() {
                this.TableName = "ProductMfTestContentDataSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductMfTestContentDataSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductMfTestContentDataSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fdaNameColumn {
                get {
                    return this.columnfdaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn standardAmountColumn {
                get {
                    return this.columnstandardAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn usageColumn {
                get {
                    return this.columnusage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mainLotNoColumn {
                get {
                    return this.columnmainLotNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestContentDataSetRow this[int index] {
                get {
                    return ((ProductMfTestContentDataSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestContentDataSetRowChangeEventHandler ProductMfTestContentDataSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestContentDataSetRowChangeEventHandler ProductMfTestContentDataSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestContentDataSetRowChangeEventHandler ProductMfTestContentDataSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestContentDataSetRowChangeEventHandler ProductMfTestContentDataSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductMfTestContentDataSetRow(ProductMfTestContentDataSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestContentDataSetRow AddProductMfTestContentDataSetRow(string fdaName, string standardAmount, string usage, string mainLotNo, string note) {
                ProductMfTestContentDataSetRow rowProductMfTestContentDataSetRow = ((ProductMfTestContentDataSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fdaName,
                        standardAmount,
                        usage,
                        mainLotNo,
                        note};
                rowProductMfTestContentDataSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductMfTestContentDataSetRow);
                return rowProductMfTestContentDataSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductMfTestContentDataSetDataTable cln = ((ProductMfTestContentDataSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductMfTestContentDataSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfdaName = base.Columns["fdaName"];
                this.columnstandardAmount = base.Columns["standardAmount"];
                this.columnusage = base.Columns["usage"];
                this.columnmainLotNo = base.Columns["mainLotNo"];
                this.columnnote = base.Columns["note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfdaName = new global::System.Data.DataColumn("fdaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfdaName);
                this.columnstandardAmount = new global::System.Data.DataColumn("standardAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstandardAmount);
                this.columnusage = new global::System.Data.DataColumn("usage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusage);
                this.columnmainLotNo = new global::System.Data.DataColumn("mainLotNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmainLotNo);
                this.columnnote = new global::System.Data.DataColumn("note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestContentDataSetRow NewProductMfTestContentDataSetRow() {
                return ((ProductMfTestContentDataSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductMfTestContentDataSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductMfTestContentDataSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductMfTestContentDataSetRowChanged != null)) {
                    this.ProductMfTestContentDataSetRowChanged(this, new ProductMfTestContentDataSetRowChangeEvent(((ProductMfTestContentDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductMfTestContentDataSetRowChanging != null)) {
                    this.ProductMfTestContentDataSetRowChanging(this, new ProductMfTestContentDataSetRowChangeEvent(((ProductMfTestContentDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductMfTestContentDataSetRowDeleted != null)) {
                    this.ProductMfTestContentDataSetRowDeleted(this, new ProductMfTestContentDataSetRowChangeEvent(((ProductMfTestContentDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductMfTestContentDataSetRowDeleting != null)) {
                    this.ProductMfTestContentDataSetRowDeleting(this, new ProductMfTestContentDataSetRowChangeEvent(((ProductMfTestContentDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductMfTestContentDataSetRow(ProductMfTestContentDataSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProductMfTestDataSource ds = new ProductMfTestDataSource();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductMfTestContentDataSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductMfTestHeaderDataSetDataTable : global::System.Data.TypedTableBase<ProductMfTestHeaderDataSetRow> {
            
            private global::System.Data.DataColumn columnfdaName;
            
            private global::System.Data.DataColumn columndosageForm;
            
            private global::System.Data.DataColumn columnproperty;
            
            private global::System.Data.DataColumn columnmanufactureSerialNumber;
            
            private global::System.Data.DataColumn columnmanufactureDate;
            
            private global::System.Data.DataColumn columnmanufactureQuantity;
            
            private global::System.Data.DataColumn columnjudgingDate;
            
            private global::System.Data.DataColumn columnstartWorkDate;
            
            private global::System.Data.DataColumn columnendWorkDate;
            
            private global::System.Data.DataColumn columnstartWorkTime;
            
            private global::System.Data.DataColumn columnendWorkTime;
            
            private global::System.Data.DataColumn columnstartWorkerName;
            
            private global::System.Data.DataColumn columnendWorkerName;
            
            private global::System.Data.DataColumn columncheckerName;
            
            private global::System.Data.DataColumn columnlogicalProductionQuantity;
            
            private global::System.Data.DataColumn columnlogicalPadQuantity;
            
            private global::System.Data.DataColumn columnlogicalBagQuantity;
            
            private global::System.Data.DataColumn columnrealProductionQuantity;
            
            private global::System.Data.DataColumn columnrealPadQuantity;
            
            private global::System.Data.DataColumn columnrealBagQuantity;
            
            private global::System.Data.DataColumn columnproductionQuantityResult;
            
            private global::System.Data.DataColumn columnpadQuantityResult;
            
            private global::System.Data.DataColumn columnbagQuantityResult;
            
            private global::System.Data.DataColumn columnmeNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestHeaderDataSetDataTable() {
                this.TableName = "ProductMfTestHeaderDataSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductMfTestHeaderDataSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductMfTestHeaderDataSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fdaNameColumn {
                get {
                    return this.columnfdaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dosageFormColumn {
                get {
                    return this.columndosageForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn propertyColumn {
                get {
                    return this.columnproperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn manufactureSerialNumberColumn {
                get {
                    return this.columnmanufactureSerialNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn manufactureDateColumn {
                get {
                    return this.columnmanufactureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn manufactureQuantityColumn {
                get {
                    return this.columnmanufactureQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn judgingDateColumn {
                get {
                    return this.columnjudgingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startWorkDateColumn {
                get {
                    return this.columnstartWorkDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endWorkDateColumn {
                get {
                    return this.columnendWorkDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startWorkTimeColumn {
                get {
                    return this.columnstartWorkTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endWorkTimeColumn {
                get {
                    return this.columnendWorkTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startWorkerNameColumn {
                get {
                    return this.columnstartWorkerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endWorkerNameColumn {
                get {
                    return this.columnendWorkerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn checkerNameColumn {
                get {
                    return this.columncheckerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logicalProductionQuantityColumn {
                get {
                    return this.columnlogicalProductionQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logicalPadQuantityColumn {
                get {
                    return this.columnlogicalPadQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logicalBagQuantityColumn {
                get {
                    return this.columnlogicalBagQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn realProductionQuantityColumn {
                get {
                    return this.columnrealProductionQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn realPadQuantityColumn {
                get {
                    return this.columnrealPadQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn realBagQuantityColumn {
                get {
                    return this.columnrealBagQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn productionQuantityResultColumn {
                get {
                    return this.columnproductionQuantityResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn padQuantityResultColumn {
                get {
                    return this.columnpadQuantityResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bagQuantityResultColumn {
                get {
                    return this.columnbagQuantityResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn meNoteColumn {
                get {
                    return this.columnmeNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestHeaderDataSetRow this[int index] {
                get {
                    return ((ProductMfTestHeaderDataSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestHeaderDataSetRowChangeEventHandler ProductMfTestHeaderDataSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestHeaderDataSetRowChangeEventHandler ProductMfTestHeaderDataSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestHeaderDataSetRowChangeEventHandler ProductMfTestHeaderDataSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductMfTestHeaderDataSetRowChangeEventHandler ProductMfTestHeaderDataSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductMfTestHeaderDataSetRow(ProductMfTestHeaderDataSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestHeaderDataSetRow AddProductMfTestHeaderDataSetRow(
                        string fdaName, 
                        string dosageForm, 
                        string property, 
                        string manufactureSerialNumber, 
                        string manufactureDate, 
                        string manufactureQuantity, 
                        string judgingDate, 
                        string startWorkDate, 
                        string endWorkDate, 
                        string startWorkTime, 
                        string endWorkTime, 
                        string startWorkerName, 
                        string endWorkerName, 
                        string checkerName, 
                        string logicalProductionQuantity, 
                        string logicalPadQuantity, 
                        string logicalBagQuantity, 
                        string realProductionQuantity, 
                        string realPadQuantity, 
                        string realBagQuantity, 
                        string productionQuantityResult, 
                        string padQuantityResult, 
                        string bagQuantityResult, 
                        string meNote) {
                ProductMfTestHeaderDataSetRow rowProductMfTestHeaderDataSetRow = ((ProductMfTestHeaderDataSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fdaName,
                        dosageForm,
                        property,
                        manufactureSerialNumber,
                        manufactureDate,
                        manufactureQuantity,
                        judgingDate,
                        startWorkDate,
                        endWorkDate,
                        startWorkTime,
                        endWorkTime,
                        startWorkerName,
                        endWorkerName,
                        checkerName,
                        logicalProductionQuantity,
                        logicalPadQuantity,
                        logicalBagQuantity,
                        realProductionQuantity,
                        realPadQuantity,
                        realBagQuantity,
                        productionQuantityResult,
                        padQuantityResult,
                        bagQuantityResult,
                        meNote};
                rowProductMfTestHeaderDataSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductMfTestHeaderDataSetRow);
                return rowProductMfTestHeaderDataSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductMfTestHeaderDataSetDataTable cln = ((ProductMfTestHeaderDataSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductMfTestHeaderDataSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfdaName = base.Columns["fdaName"];
                this.columndosageForm = base.Columns["dosageForm"];
                this.columnproperty = base.Columns["property"];
                this.columnmanufactureSerialNumber = base.Columns["manufactureSerialNumber"];
                this.columnmanufactureDate = base.Columns["manufactureDate"];
                this.columnmanufactureQuantity = base.Columns["manufactureQuantity"];
                this.columnjudgingDate = base.Columns["judgingDate"];
                this.columnstartWorkDate = base.Columns["startWorkDate"];
                this.columnendWorkDate = base.Columns["endWorkDate"];
                this.columnstartWorkTime = base.Columns["startWorkTime"];
                this.columnendWorkTime = base.Columns["endWorkTime"];
                this.columnstartWorkerName = base.Columns["startWorkerName"];
                this.columnendWorkerName = base.Columns["endWorkerName"];
                this.columncheckerName = base.Columns["checkerName"];
                this.columnlogicalProductionQuantity = base.Columns["logicalProductionQuantity"];
                this.columnlogicalPadQuantity = base.Columns["logicalPadQuantity"];
                this.columnlogicalBagQuantity = base.Columns["logicalBagQuantity"];
                this.columnrealProductionQuantity = base.Columns["realProductionQuantity"];
                this.columnrealPadQuantity = base.Columns["realPadQuantity"];
                this.columnrealBagQuantity = base.Columns["realBagQuantity"];
                this.columnproductionQuantityResult = base.Columns["productionQuantityResult"];
                this.columnpadQuantityResult = base.Columns["padQuantityResult"];
                this.columnbagQuantityResult = base.Columns["bagQuantityResult"];
                this.columnmeNote = base.Columns["meNote"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfdaName = new global::System.Data.DataColumn("fdaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfdaName);
                this.columndosageForm = new global::System.Data.DataColumn("dosageForm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndosageForm);
                this.columnproperty = new global::System.Data.DataColumn("property", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproperty);
                this.columnmanufactureSerialNumber = new global::System.Data.DataColumn("manufactureSerialNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanufactureSerialNumber);
                this.columnmanufactureDate = new global::System.Data.DataColumn("manufactureDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanufactureDate);
                this.columnmanufactureQuantity = new global::System.Data.DataColumn("manufactureQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanufactureQuantity);
                this.columnjudgingDate = new global::System.Data.DataColumn("judgingDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjudgingDate);
                this.columnstartWorkDate = new global::System.Data.DataColumn("startWorkDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartWorkDate);
                this.columnendWorkDate = new global::System.Data.DataColumn("endWorkDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendWorkDate);
                this.columnstartWorkTime = new global::System.Data.DataColumn("startWorkTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartWorkTime);
                this.columnendWorkTime = new global::System.Data.DataColumn("endWorkTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendWorkTime);
                this.columnstartWorkerName = new global::System.Data.DataColumn("startWorkerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartWorkerName);
                this.columnendWorkerName = new global::System.Data.DataColumn("endWorkerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendWorkerName);
                this.columncheckerName = new global::System.Data.DataColumn("checkerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckerName);
                this.columnlogicalProductionQuantity = new global::System.Data.DataColumn("logicalProductionQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogicalProductionQuantity);
                this.columnlogicalPadQuantity = new global::System.Data.DataColumn("logicalPadQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogicalPadQuantity);
                this.columnlogicalBagQuantity = new global::System.Data.DataColumn("logicalBagQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogicalBagQuantity);
                this.columnrealProductionQuantity = new global::System.Data.DataColumn("realProductionQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrealProductionQuantity);
                this.columnrealPadQuantity = new global::System.Data.DataColumn("realPadQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrealPadQuantity);
                this.columnrealBagQuantity = new global::System.Data.DataColumn("realBagQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrealBagQuantity);
                this.columnproductionQuantityResult = new global::System.Data.DataColumn("productionQuantityResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductionQuantityResult);
                this.columnpadQuantityResult = new global::System.Data.DataColumn("padQuantityResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadQuantityResult);
                this.columnbagQuantityResult = new global::System.Data.DataColumn("bagQuantityResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbagQuantityResult);
                this.columnmeNote = new global::System.Data.DataColumn("meNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeNote);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestHeaderDataSetRow NewProductMfTestHeaderDataSetRow() {
                return ((ProductMfTestHeaderDataSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductMfTestHeaderDataSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductMfTestHeaderDataSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductMfTestHeaderDataSetRowChanged != null)) {
                    this.ProductMfTestHeaderDataSetRowChanged(this, new ProductMfTestHeaderDataSetRowChangeEvent(((ProductMfTestHeaderDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductMfTestHeaderDataSetRowChanging != null)) {
                    this.ProductMfTestHeaderDataSetRowChanging(this, new ProductMfTestHeaderDataSetRowChangeEvent(((ProductMfTestHeaderDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductMfTestHeaderDataSetRowDeleted != null)) {
                    this.ProductMfTestHeaderDataSetRowDeleted(this, new ProductMfTestHeaderDataSetRowChangeEvent(((ProductMfTestHeaderDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductMfTestHeaderDataSetRowDeleting != null)) {
                    this.ProductMfTestHeaderDataSetRowDeleting(this, new ProductMfTestHeaderDataSetRowChangeEvent(((ProductMfTestHeaderDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductMfTestHeaderDataSetRow(ProductMfTestHeaderDataSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProductMfTestDataSource ds = new ProductMfTestDataSource();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductMfTestHeaderDataSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductMfTestContentDataSetRow : global::System.Data.DataRow {
            
            private ProductMfTestContentDataSetDataTable tableProductMfTestContentDataSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductMfTestContentDataSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductMfTestContentDataSet = ((ProductMfTestContentDataSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fdaName {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestContentDataSet.fdaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestContentDataSet\' 테이블의 \'fdaName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestContentDataSet.fdaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string standardAmount {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestContentDataSet.standardAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestContentDataSet\' 테이블의 \'standardAmount\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestContentDataSet.standardAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string usage {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestContentDataSet.usageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestContentDataSet\' 테이블의 \'usage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestContentDataSet.usageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mainLotNo {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestContentDataSet.mainLotNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestContentDataSet\' 테이블의 \'mainLotNo\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestContentDataSet.mainLotNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string note {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestContentDataSet.noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestContentDataSet\' 테이블의 \'note\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestContentDataSet.noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfdaNameNull() {
                return this.IsNull(this.tableProductMfTestContentDataSet.fdaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfdaNameNull() {
                this[this.tableProductMfTestContentDataSet.fdaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstandardAmountNull() {
                return this.IsNull(this.tableProductMfTestContentDataSet.standardAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstandardAmountNull() {
                this[this.tableProductMfTestContentDataSet.standardAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsusageNull() {
                return this.IsNull(this.tableProductMfTestContentDataSet.usageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetusageNull() {
                this[this.tableProductMfTestContentDataSet.usageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmainLotNoNull() {
                return this.IsNull(this.tableProductMfTestContentDataSet.mainLotNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmainLotNoNull() {
                this[this.tableProductMfTestContentDataSet.mainLotNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnoteNull() {
                return this.IsNull(this.tableProductMfTestContentDataSet.noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnoteNull() {
                this[this.tableProductMfTestContentDataSet.noteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductMfTestHeaderDataSetRow : global::System.Data.DataRow {
            
            private ProductMfTestHeaderDataSetDataTable tableProductMfTestHeaderDataSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductMfTestHeaderDataSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductMfTestHeaderDataSet = ((ProductMfTestHeaderDataSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fdaName {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.fdaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'fdaName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.fdaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dosageForm {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.dosageFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'dosageForm\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.dosageFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string property {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.propertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'property\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.propertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string manufactureSerialNumber {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.manufactureSerialNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'manufactureSerialNumber\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.manufactureSerialNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string manufactureDate {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.manufactureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'manufactureDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.manufactureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string manufactureQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.manufactureQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'manufactureQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.manufactureQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string judgingDate {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.judgingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'judgingDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.judgingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startWorkDate {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.startWorkDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'startWorkDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.startWorkDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string endWorkDate {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.endWorkDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'endWorkDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.endWorkDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startWorkTime {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.startWorkTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'startWorkTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.startWorkTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string endWorkTime {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.endWorkTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'endWorkTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.endWorkTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startWorkerName {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.startWorkerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'startWorkerName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.startWorkerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string endWorkerName {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.endWorkerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'endWorkerName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.endWorkerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string checkerName {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.checkerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'checkerName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.checkerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logicalProductionQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.logicalProductionQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'logicalProductionQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.logicalProductionQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logicalPadQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.logicalPadQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'logicalPadQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.logicalPadQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logicalBagQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.logicalBagQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'logicalBagQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.logicalBagQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string realProductionQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.realProductionQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'realProductionQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.realProductionQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string realPadQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.realPadQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'realPadQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.realPadQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string realBagQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.realBagQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'realBagQuantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.realBagQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string productionQuantityResult {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.productionQuantityResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'productionQuantityResult\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.productionQuantityResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string padQuantityResult {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.padQuantityResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'padQuantityResult\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.padQuantityResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bagQuantityResult {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.bagQuantityResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'bagQuantityResult\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.bagQuantityResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string meNote {
                get {
                    try {
                        return ((string)(this[this.tableProductMfTestHeaderDataSet.meNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProductMfTestHeaderDataSet\' 테이블의 \'meNote\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProductMfTestHeaderDataSet.meNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfdaNameNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.fdaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfdaNameNull() {
                this[this.tableProductMfTestHeaderDataSet.fdaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdosageFormNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.dosageFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdosageFormNull() {
                this[this.tableProductMfTestHeaderDataSet.dosageFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspropertyNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.propertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpropertyNull() {
                this[this.tableProductMfTestHeaderDataSet.propertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmanufactureSerialNumberNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.manufactureSerialNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmanufactureSerialNumberNull() {
                this[this.tableProductMfTestHeaderDataSet.manufactureSerialNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmanufactureDateNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.manufactureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmanufactureDateNull() {
                this[this.tableProductMfTestHeaderDataSet.manufactureDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmanufactureQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.manufactureQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmanufactureQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.manufactureQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsjudgingDateNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.judgingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetjudgingDateNull() {
                this[this.tableProductMfTestHeaderDataSet.judgingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartWorkDateNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.startWorkDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartWorkDateNull() {
                this[this.tableProductMfTestHeaderDataSet.startWorkDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsendWorkDateNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.endWorkDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetendWorkDateNull() {
                this[this.tableProductMfTestHeaderDataSet.endWorkDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartWorkTimeNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.startWorkTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartWorkTimeNull() {
                this[this.tableProductMfTestHeaderDataSet.startWorkTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsendWorkTimeNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.endWorkTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetendWorkTimeNull() {
                this[this.tableProductMfTestHeaderDataSet.endWorkTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartWorkerNameNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.startWorkerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartWorkerNameNull() {
                this[this.tableProductMfTestHeaderDataSet.startWorkerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsendWorkerNameNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.endWorkerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetendWorkerNameNull() {
                this[this.tableProductMfTestHeaderDataSet.endWorkerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscheckerNameNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.checkerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcheckerNameNull() {
                this[this.tableProductMfTestHeaderDataSet.checkerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogicalProductionQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.logicalProductionQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogicalProductionQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.logicalProductionQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogicalPadQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.logicalPadQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogicalPadQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.logicalPadQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogicalBagQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.logicalBagQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogicalBagQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.logicalBagQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrealProductionQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.realProductionQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrealProductionQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.realProductionQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrealPadQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.realPadQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrealPadQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.realPadQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrealBagQuantityNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.realBagQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrealBagQuantityNull() {
                this[this.tableProductMfTestHeaderDataSet.realBagQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsproductionQuantityResultNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.productionQuantityResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetproductionQuantityResultNull() {
                this[this.tableProductMfTestHeaderDataSet.productionQuantityResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspadQuantityResultNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.padQuantityResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpadQuantityResultNull() {
                this[this.tableProductMfTestHeaderDataSet.padQuantityResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbagQuantityResultNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.bagQuantityResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbagQuantityResultNull() {
                this[this.tableProductMfTestHeaderDataSet.bagQuantityResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmeNoteNull() {
                return this.IsNull(this.tableProductMfTestHeaderDataSet.meNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmeNoteNull() {
                this[this.tableProductMfTestHeaderDataSet.meNoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductMfTestContentDataSetRowChangeEvent : global::System.EventArgs {
            
            private ProductMfTestContentDataSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestContentDataSetRowChangeEvent(ProductMfTestContentDataSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestContentDataSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductMfTestHeaderDataSetRowChangeEvent : global::System.EventArgs {
            
            private ProductMfTestHeaderDataSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestHeaderDataSetRowChangeEvent(ProductMfTestHeaderDataSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductMfTestHeaderDataSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591